#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e

# Azure Virtual Machines - https://docs.microsoft.com/en-us/azure/virtual-machines/
# https://docs.microsoft.com/en-us/azure/virtual-machines/windows/quick-create-cli

# The deployment process is:
# 1- Log in to Azure.
# 2- Create a resource group.
# 3- Create virtual network resources.
# 4- Create the virtual machine.
# 5- Attach a data disk to the VM.
# 6- Enable Azure Disk Encryption.
# 7- Connect to the VM.


# --------------- 1 --------------- 
echo "---> Log in to Azure"
# https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli
az login --use-device-code
# az account list

echo "---> Verify registration of the required Azure resource providers"
# https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers
az provider register --namespace "Microsoft.Compute"
az provider register --namespace "Microsoft.Storage"
az provider register --namespace "Microsoft.Network"
az provider register --namespace "Microsoft.KeyVault"


# --------------- 2 --------------- 
echo "---> Creating resource group"
paramResourceGroup="rg-testapp1-shared-$RANDOM"
paramLocation="westus"
paramTags="Environment=Test Department=IT"

rgExists="$(az group exists --name $paramResourceGroup)"
if [ "$rgExists" == "false" ]; then
  az group create --name "$paramResourceGroup" --location "$paramLocation" --tags $paramTags
fi


# --------------- 3 --------------- 
echo "---> Create virtual network resources"
# When you set up a virtual network, you specify the available address spaces, subnets, and security. 
# If the VNet will be connected to other VNets, you must select address ranges that are not overlapping. 
# This is the range of private addresses that the VMs and services in your network can use. 
# You can use unroutable IP addresses such as 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16, or define your own range.

# Create a virtual network and subnet
# Segregate your network: you might assign 10.1.0.0 to VMs, 10.2.0.0 to back-end services, and 10.3.0.0 to SQL Server VMs.
paramNetworkSubnetConfig="snet-shared-$paramLocation-001"
paramVirtualNetwork="vnet-shared-$paramLocation-$RANDOM"
paramSubnetPrefix="192.168.1.0/24"
paramAddressPrefix="192.168.0.0/16"
az network vnet create --resource-group "$paramResourceGroup" --name "$paramVirtualNetwork" \
  --address-prefix "$paramAddressPrefix" --subnet-name "$paramNetworkSubnetConfig" \
  --subnet-prefix "$paramSubnetPrefix" --location "$paramLocation" --tags $paramTags

# Create a public IP address and specify a DNS name
paramPublicIpAddress="pip-testapp1-dev-$paramLocation-$RANDOM"
az network public-ip create \
  --resource-group "$paramResourceGroup" --name "$paramPublicIpAddress" \
  --allocation-method "Static" --idle-timeout 4 \
  --location "$paramLocation" --tags $paramTags

# Create a network security group.
paramNetworkSecurityGroup="nsg-testapp1-$RANDOM"
az network nsg create \
  --resource-group "$paramResourceGroup" \
  --name "$paramNetworkSecurityGroup" \
  --location "$paramLocation" --tags $paramTags

# Create network security group rules
paramNSGRule1="nsg-rdpallow-001"
az network nsg rule create --resource-group "$paramResourceGroup" --nsg-name "$paramNetworkSecurityGroup" \
  --name "$paramNSGRule1" --priority 1000 --source-address-prefixes "*" --source-port-ranges "*" \
  --destination-address-prefix "*" --destination-port-ranges "3389" \
  --access "Allow" --protocol "Tcp" --direction "Inbound" --description "Allow RDP"

paramNSGRule2="nsg-weballow-001"
az network nsg rule create --resource-group "$paramResourceGroup" --nsg-name "$paramNetworkSecurityGroup" \
  --name "$paramNSGRule2" --priority 1001 --source-address-prefixes "*" --source-port-ranges "*" \
  --destination-address-prefix "*" --destination-port-ranges "80" \
  --access "Allow" --protocol "Tcp" --direction "Inbound" --description "Allow Web server port 80"

# Create a virtual network card with the public IP address and network security group.
paramNetworkInterface="nic-01-vm-shared-$RANDOM"
az network nic create \
  --resource-group "$paramResourceGroup" \
  --name "$paramNetworkInterface" \
  --vnet-name "$paramVirtualNetwork" \
  --subnet "$paramNetworkSubnetConfig" \
  --network-security-group "$paramNetworkSecurityGroup" \
  --public-ip-address "$paramPublicIpAddress" \
  --location "$paramLocation" --tags $paramTags


# --------------- 4 --------------- 
echo "---> Create virtual machine"
paramVMusername="azureuser"
paramVMPassword="ChangeThisPassword@123"
# You should choose machine names that are meaningful and consistent, so you can easily identify what the VM does.
# A good convention is to include the following information in the name: Environment (dev, prod, QA), 
# Location (uw for US West, ue for US East), Instance (01, 02), Product or Service name and Role (sql, web, messaging)
paramVMName="vmserver$RANDOM" # Windows VM names may only contain 1-15 letters, numbers, '.', and '-'.
# https://docs.microsoft.com/en-us/azure/virtual-machines/sizes-general
paramVMSize="Standard_D2S_V3" # Check available sizes: az vm list-sizes --location "$paramLocation"
# Get Source image information: 
# az vm image list-skus --location "westus" --offer "WindowsServer" --publisher "MicrosoftWindowsServer" --output table
# az vm image list-skus --location "westus" --offer "Windows-10" --publisher "MicrosoftWindowsDesktop" --output table
paramPublisher="MicrosoftWindowsServer"
paramOffer="WindowsServer"
paramSkus="2019-datacenter-smalldisk-g2"
paramVersion="latest"
paramAuthenticationType="password" # {all, password, ssh}

az vm create \
  --resource-group "$paramResourceGroup" \
  --name "$paramVMName" \
  --computer-name "$paramVMName" \
  --nics "$paramNetworkInterface" \
  --admin-password "$paramVMPassword" \
  --admin-username "$paramVMusername" \
  --authentication-type "$paramAuthenticationType" \
  --image "$paramPublisher:$paramOffer:$paramSkus:$paramVersion" \
  --os-disk-name "osdisk-$paramVMName" \
  --size "$paramVMSize" \
  --location "$paramLocation" \
  --tags $paramTags


# --------------- 5 --------------- 
echo "---> Attach a data disk to the VM"
# https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-managed-disk-portal
# SkuName: Specifies the Sku name of the storage account. 
# Available values are Standard_LRS, Premium_LRS, StandardSSD_LRS, and UltraSSD_LRS.
storageType="Standard_LRS"
diskSizeGB=64
dataDiskName="disk-$paramVMName"
# Each storage device is assigned a unique numeric identifier, starting at zero. 
# The full path to a device is represented by the bus number, target ID number, and Logical Unit Number (LUN)
paramLun=0 # Lun: Specifies the logical unit number (LUN) for a data disk.

az vm disk attach --resource-group "$paramResourceGroup" \
  --vm-name "$paramVMName" --name "$dataDiskName" --new \
  --sku "$storageType" --lun "$paramLun" --size-gb "$diskSizeGB" \
  --caching "ReadWrite"


# --------------- 6 --------------- 
echo "---> Enable Azure Disk Encryption"
# Protect data at rest: Data encryption at rest is a mandatory step toward 
# data privacy, compliance, and data sovereignty.

# Azure Disk Encryption helps protect and safeguard your data to meet your organizational security 
# and compliance commitments. It uses the Bitlocker feature of Windows to provide volume encryption 
# for the OS and data disks of Azure virtual machines (VMs).
# https://docs.microsoft.com/en-us/azure/virtual-machines/windows/disk-encryption-windows
# https://docs.microsoft.com/en-us/azure/virtual-machines/windows/disk-encryption-cli-quickstart
paramKeyVault="kv-shared-$RANDOM" # unique keyvault name
# Create a Key Vault configured for encryption keys
az keyvault create --name "$paramKeyVault" --resource-group "$paramResourceGroup" \
  --location "$paramLocation" --enabled-for-disk-encryption --tags $paramTags
paramVolumeType="All" # Windows: The VolumeType parameter may be omitted, in which case the operation defaults to All; if the VolumeType parameter is present for a Windows virtual machine, it must be set to either All or OS.
# Encrypt the virtual machine
az vm encryption enable --resource-group "$paramResourceGroup" --name "$paramVMName" \
  --disk-encryption-keyvault "$paramKeyVault" --force --volume-type "$paramVolumeType"
# Verify the encryption process
az vm encryption show --resource-group "$paramResourceGroup" --name "$paramVMName"
echo "---> Wait until the encryption process is done and status is 'OsVolumeEncrypted : Encrypted' before you try to connect to the VM through RDP."
echo "---> CHECK STATUS:"
echo "---> az vm encryption show --resource-group $paramResourceGroup --name $paramVMName"


# --------------- 7 --------------- 
echo "---> Connect to Virtual Machine '$paramVMName'"
echo "---> Username is: $paramVMusername"
echo "---> Public IP address is: "
az network public-ip show --resource-group "$paramResourceGroup" --name "$paramPublicIpAddress" --query "{address: ipAddress}" --output tsv
echo "---> GET PUBLIC IP ADDRESS:"
echo "---> az network public-ip show --resource-group $paramResourceGroup --name $paramPublicIpAddress --query \"{address: ipAddress}\"" 
VMIpAddress=$(az network public-ip show --resource-group "$paramResourceGroup" --name "$paramPublicIpAddress" --query "{address: ipAddress}" --output tsv)
echo "---> Use Microsoft Remote Desktop client. In Windows you can use the following command: mstsc /v:$VMIpAddress"
# mstsc /v:$VMIpAddress

# Install IIS web server
# Install-WindowsFeature -name Web-Server -IncludeManagementTools

# Maintenance commands
# az vm show --resource-group "$paramResourceGroup" --name "$paramVMName"
# az vm restart --resource-group "$paramResourceGroup" --name "$paramVMName"
# az vm stop --resource-group "$paramResourceGroup" --name "$paramVMName"
# az vm delete --resource-group "$paramResourceGroup" --name "$paramVMName"
