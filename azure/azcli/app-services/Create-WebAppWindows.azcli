#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e

# Azure App Service - https://docs.microsoft.com/en-us/azure/app-service/

# The deployment process is:
# 1- Log in to Azure.
# 2- Create a resource group.
# 3- Create an App Service plan.
# 4- Create a new Web App.
# 5- Deploy an ASP.NET Web App.
# 6- Configure logging for the Web App.
# 7- Start live log tracing for the Web App.

# --------------- 1 --------------- 
echo "---> Log in to Azure"
# https://docs.microsoft.com/en-us/cli/azure/authenticate-azure-cli
az login --use-device-code
# az account list

echo "---> Verify registration of the required Azure resource providers"
# https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers
az provider register --namespace "Microsoft.Web"
az provider register --namespace "Microsoft.DomainRegistration"


# --------------- 2 --------------- 
echo "---> Creating resource group"
paramResourceGroup="test_resourcegroup_$RANDOM"
paramLocation="westus"
paramTags="Environment=Test Department=IT"

rgExists="$(az group exists --name $paramResourceGroup)"
if [ "$rgExists" == "false" ]; then
  az group create --name "$paramResourceGroup" --location "$paramLocation" --tags $paramTags
fi


# --------------- 3 --------------- 
echo "---> Create an App Service plan"
# https://azure.microsoft.com/en-us/pricing/details/app-service/
paramAppServicePlan="app_service_plan_$RANDOM"
paramSku="FREE" # Accepted values: sku {B1, B2, B3, D1, F1, FREE, I1, I1v2, I2, I2v2, I3, I3v2, P1V2, P1V3, P2V2, P2V3, P3V2, P3V3, PC2, PC3, PC4, S1, S2, S3, SHARED
paramNumberofWorkers=1

az appservice plan create --name "$paramAppServicePlan" \
  --resource-group "$paramResourceGroup" --location "$paramLocation" \
  --sku "$paramSku" --number-of-workers "$paramNumberofWorkers" \
  --tags $paramTags


# --------------- 4 --------------- 
echo "---> Create a new Web App"
paramWebApp="test-web-$RANDOM"
paramAppRuntime="DOTNET|5.0" # Use az webapp list-runtimes for available list.
az webapp create --name "$paramWebApp" \
  --resource-group "$paramResourceGroup" --plan "$paramAppServicePlan" \
  --runtime "$paramAppRuntime" --tags $paramTags 

# --------------- 5 --------------- 
echo "---> Deploy an ASP.NET Web App"
# https://docs.microsoft.com/en-us/cli/azure/webapp/deployment/source?view=azure-cli-latest#az_webapp_deployment_source_config_local_git
cd ./example
appFolderName="TestWebApp"
if [ -d ./$appFolderName/ ]; then rm -rf $appFolderName; fi
dotnet new mvc -n $appFolderName
cd $appFolderName
dotnet build
dotnet publish --output pub
cd pub
zip -r site.zip *

az webapp deployment source config-zip --name "$paramWebApp" \
  --src site.zip --resource-group "$paramResourceGroup"

python -m webbrowser "https://${paramWebApp}.azurewebsites.net"

# --------------- 6 --------------- 
echo "---> Configure logging for the Web App"
paramLogLevel="verbose" # accepted values: error, information, verbose, warning
az webapp log config --name "$paramWebApp" --resource-group "$paramResourceGroup" --level "$paramLogLevel" --web-server-logging "filesystem" --application-logging  "filesystem"

echo "---> Start live log tracing for the Web App"
# By default all live traces configured by az webapp log config will be shown, but you can scope to certain providers/folders, e.g. 'application', 'http', etc.
az webapp log tail --name "$paramWebApp" --resource-group "$paramResourceGroup"

# Cleanup 
# Remove Resource Group
# az group delete --name $paramResourceGroup --yes